@page "/"

@using ApexDiff.Data
@using ApexDiff.Models
@using Excubo.Blazor.TreeViews
@using ApexDiff.ViewModels
@using System.ComponentModel

@inject AssetInventoryRepository InventoryRepository
@inject IndexViewModel DataContext

<Row Margin="Margin.Is5">
    <Column ColumnSize="ColumnSize.IsThird">
        <Select TValue="int"
                @bind-SelectedValue="@ViewModel.SourceSelectedIndex"
                Multiple="false">

            @{ 
                int inventoryIndex = 0;
                foreach (var inventory in ViewModel.GroupedInventories)
                {
                    <SelectGroup Label="@inventory.Key" @key=inventory>

                        @foreach (var gameVersion in inventory)
                        {
                            <SelectItem Value="@inventoryIndex" @key=gameVersion>@gameVersion.Game @gameVersion.Version</SelectItem>
                            inventoryIndex++;
                        }

                    </SelectGroup>
                }
            }
        </Select>
    </Column>

    <Column ColumnSize="ColumnSize.Is1">
        <Icon Name="IconName.ArrowRight" />
    </Column>
    <Column ColumnSize="ColumnSize.IsThird">
        <Select TValue="AssetInventory"
                Multiple="false">

            @foreach (var inventory in ViewModel.GroupedInventories)
            {
                <SelectGroup Label="@inventory.Key" @key=inventory>

                    @foreach (var gameVersion in inventory)
                    {
                        <SelectItem TValue="AssetInventory" Value="@gameVersion" @key=gameVersion>@gameVersion.Game @gameVersion.Version</SelectItem>
                    }

                </SelectGroup>
            }

        </Select>
    </Column>
</Row>

<Row>
    <Column ColumnSize="ColumnSize.Is10">
        <TreeView Items="_diffTree?.Children"
                  GetChildren="@(item => item?.Children)"
                  InitiallyCollapsed="true">
            <ItemTemplate>
                <Icon Name="IconName.Folder" Margin="Margin.Is1" Style="color: red" /> @context.Item.Name
            </ItemTemplate>
        </TreeView>
    </Column>
</Row>

@code {
    private AssetInventory _selectedTargetInventory = null;

    private TreeNode _diffTree = null;

    private IndexViewModel ViewModel { get; set; } = null;

    public Index()
    {
    }

    protected override async Task OnInitializedAsync()
    {
        ViewModel = DataContext;
        ViewModel.PropertyChanged += OnDataContextPropertyChanged;

        await ViewModel.InitializeAsync();

        await RebuildDiffTreeAsync();
    }

    private void OnSelectedSourceInventoryChanged(AssetInventory newValue)
    {
        System.Console.WriteLine("OnSelectedSourceInventoryChanged");

        _ = RebuildDiffTreeAsync();
    }

    private void OnSelectedTargetInventoryChanged(AssetInventory newValue)
    {
        _ = RebuildDiffTreeAsync();
    }

    private async Task RebuildDiffTreeAsync()
    {
        if (ViewModel.SelectedSourceInventory == null)
        {
            return;
        }

        _diffTree = await InventoryRepository.GetInventoryFileTreeAsync(ViewModel.SelectedSourceInventory);

        StateHasChanged();
    }

    private async void OnDataContextPropertyChanged(object sender, PropertyChangedEventArgs args)
    {
        if (args.PropertyName == nameof(IndexViewModel.SelectedSourceInventory))
        {
            await RebuildDiffTreeAsync();
        }
    }
}
